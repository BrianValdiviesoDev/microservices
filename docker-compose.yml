version: '3'

services:
  ironman:
    build:
      context: ./express-api
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - PORT=3000
      - APP_NAME=Ironman
    networks:
      - avengers

  captain-america:
    build:
      context: ./express-api
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - PORT=3001
      - APP_NAME=Captain Am√©rica
    networks:
      - avengers

  thor:
    container_name: thor
    build:
      context: ./express-api
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    environment:
      - PORT=3002
      - APP_NAME=Thor
    networks:
      - avengers

  hulk:
    build:
      context: ./react-front
      dockerfile: Dockerfile
    ports:
      - "3003:3003"
    environment:
      - VITE_APP_PORT=3003
      - VITE_APP_NAME=Hulk
      - VITE_API_URL=http://127.0.0.1:3000/whoareyou
    networks:
      - avengers

  dr-strange:
    build:
      context: ./react-front
      dockerfile: Dockerfile
    ports:
      - "3004:3004"
    environment:
      - VITE_APP_PORT=3004
      - VITE_APP_NAME=Dr. Strange
      - VITE_API_URL=http://ironman:3002/whoareyou
    networks:
      - avengers

  kong-database:
    image: postgres:latest
    container_name: kong-db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kong
    networks:
      - avengers
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: on-failure

  kong-migrations:
    image: kong:latest
    command: kong migrations bootstrap && kong migrations up && kong migrations finish
    depends_on:
      kong-database:
        condition: service_healthy
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PG_DATABASE: kong
    networks:
      - avengers
    restart: on-failure

  kong:
    image: kong:latest
    container_name: kong-api
    depends_on:
      kong-database:
        condition: service_healthy
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PG_DATABASE: kong
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
    networks:
      - avengers
    ports:
      - "8000:8000"
      - "8001:8001"
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure

  konga:
    image: pantsel/konga
    container_name: konga
    restart: always
    ports:
      - "1337:1337"
    environment:
      NODE_ENV: development
    networks:
      - avengers
      
  keycloak:
    image: quay.io/keycloak/keycloak:23.0.6
    ports:
      - "8080:8080"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command: start-dev
    networks:
      - avengers
      
networks:
  avengers:
    driver: bridge